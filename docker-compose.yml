version: '3.8'

services:
  bot-candidature:
    build: .
    container_name: bot-candidature
    restart: unless-stopped
    ports:
      - "7001:7001"  # Interface web sur le port 7001
    volumes:
      # Configuration et CV
      - ./config.yaml:/app/config.yaml:ro
      - ./cv.pdf:/app/cv.pdf:ro
      # Dossiers de sortie
      - ./outbox:/app/outbox
      - ./logs:/app/logs
      - ./cv_letters:/app/cv_letters
    environment:
      # Variables d'environnement pour les notifications
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - WEBHOOK_URL=${WEBHOOK_URL:-}
      # Configuration Ollama (optionnel)
      - OLLAMA_HOST=${OLLAMA_HOST:-http://ollama:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3}
    networks:
      - bot-network
    depends_on:
      - ollama
    profiles:
      - full

  # Service Ollama pour la génération locale de lettres
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - bot-network
    profiles:
      - full

  # Service Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bot-network
    profiles:
      - full

  # Service de monitoring (optionnel)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bot-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - bot-network
    profiles:
      - monitoring

networks:
  bot-network:
    driver: bridge

volumes:
  ollama_data:
  redis_data:
  prometheus_data:
  grafana_data:

# Profils disponibles :
# - full : Bot + Ollama + Redis + Monitoring
# - monitoring : Seulement le monitoring
# - default : Seulement le bot (sans Ollama)
